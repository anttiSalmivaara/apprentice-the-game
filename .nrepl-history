(def a (atom {}))
a
(@a)
(swap! a assoc :k "v")
(swap! a assoc :k2 "v2")
(:k (swap! a assoc :k2 "v2"))
(@a)
(deref a)
(:k (swap! a assoc :k3 "v3"))
(deref a)
(cons a (range 2 5))
(cons "a" (range 2 5))
(vec (cons "a" (range 2 5)))
quit
(def atomi (atom {}))
(swap! atomi assoc :k1 "v1" :k2 "v2")
atomi
(@atomi :k1)
(keyword paska)
(keyword "paska")
(str "position-" 1 "-img")
(keyword (str "position-" 1 "-img"))
(swap! atomi assoc (keyqord (str "position-" 1 "-img")) "on kakkaa")
(swap! atomi assoc (keyword (str "position-" 1 "-img")) "on kakkaa")
(zipmap (repeat 1) (range 1 17))
(zipmap (range 1 17) (repeat 1))
(vec (zipmap (range 1 17) (repeat 1)))
(deref atomi)
(map #(% + %) (range 1 10))
(map #(+ % %) (range 1 10))
(= null false)
(= nil false)
quit
